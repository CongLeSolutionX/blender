#include "svg_icons.h"
#include "UI_resources.hh"

#include <algorithm>
#include <vector>

#define ICON_NAME(icon) #icon

blender::Span<SVG_Icon> blender_default_icons()
{
  static const std::vector<SVG_Icon> icons = [] {
    std::vector<SVG_Icon> icons
    {
      // clang-format off
@SVGCCCONTENTS@
      // clang-format on
    };
    std::sort(icons.begin(), icons.end(), [](const SVG_Icon &a, const SVG_Icon &b) {
      return a.icon < b.icon;
    });
    return icons;
  }();
  [[maybe_unused]] const auto is_sequential = [](blender::Span<SVG_Icon> icons) {
    int x = 0;
    return std::all_of(
        icons.begin(), icons.end(), [&x](const SVG_Icon &icon) { return x++ == icon.icon; });
  };
  BLI_assert(is_sequential(icons));
  return icons;
}
